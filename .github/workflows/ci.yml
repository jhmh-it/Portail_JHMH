# 🔄 Workflow CI - Intégration Continue
# Exécute les tests, linting et vérifications de qualité sur chaque PR et push

name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch: # Permet le déclenchement manuel

env:
  NODE_VERSION: "20"
  ENABLE_TURBOPACK: false # Désactivé en CI pour la stabilité

jobs:
  quality:
    runs-on: ubuntu-latest
    name: Code Quality
    timeout-minutes: 15

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Pour l'analyse complète si nécessaire

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 💅 Check Prettier
        run: npm run format:check

      - name: 🔷 TypeScript Check
        run: npm run type-check

      - name: 🧪 Run Tests
        run: npm test

      - name: 🏗️ Build Application
        env:
          # Variables Firebase publiques (nécessaires pour le build)
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          # Optimisations Next.js
          NEXT_TELEMETRY_DISABLED: 1
        run: npm run build

      - name: 🔐 Security Audit
        run: npm audit --audit-level=moderate
        continue-on-error: true # Ne pas bloquer si des vulnérabilités mineures

      - name: 📊 Bundle Size Analysis
        run: |
          echo "📦 Analyzing bundle size..."
          if [ -d ".next" ]; then
            # Taille totale
            TOTAL_SIZE=$(du -sh .next/ | cut -f1)
            echo "Total build size: $TOTAL_SIZE"
            
            # Tailles détaillées
            echo "### Detailed sizes:"
            du -sh .next/static/chunks/*.js 2>/dev/null | head -10 || echo "No chunks found"
            
            # Vérification des limites
            TOTAL_MB=$(du -sm .next/ | cut -f1)
            if [ $TOTAL_MB -gt 50 ]; then
              echo "⚠️ Warning: Build size exceeds 50MB threshold"
            else
              echo "✅ Build size is within acceptable limits"
            fi
          else
            echo "❌ Build directory not found"
            exit 1
          fi

      - name: 💾 Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-nextjs-

      - name: 🎯 Summary
        if: always()
        run: |
          echo "## 📊 CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Checks Completed:" >> $GITHUB_STEP_SUMMARY
          echo "- 🔍 ESLint" >> $GITHUB_STEP_SUMMARY
          echo "- 💅 Prettier" >> $GITHUB_STEP_SUMMARY
          echo "- 🔷 TypeScript" >> $GITHUB_STEP_SUMMARY
          echo "- 🧪 Tests" >> $GITHUB_STEP_SUMMARY
          echo "- 🏗️ Build" >> $GITHUB_STEP_SUMMARY
          echo "- 🔐 Security Audit" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Build Info:" >> $GITHUB_STEP_SUMMARY
          echo "- Node.js: v${{ env.NODE_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note:** Production deployment is handled automatically by Vercel on push to main branch." >> $GITHUB_STEP_SUMMARY
