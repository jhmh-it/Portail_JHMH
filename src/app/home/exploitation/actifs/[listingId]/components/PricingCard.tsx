'use client';

import { Euro } from 'lucide-react';

import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Separator } from '@/components/ui/separator';
import { formatCurrency } from '@/lib/format';

import type { ListingDetails } from '../hooks/useListingDetails';

interface PricingCardProps {
  listing: ListingDetails;
}

export function PricingCard({ listing }: PricingCardProps) {
  if (!listing.prices) return null;

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Euro className="h-5 w-5" />
          Tarification
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-2">
        <div className="flex items-center gap-2">
          <span className="text-muted-foreground text-sm">Prix de base:</span>
          <span className="text-lg font-semibold">
            {formatCurrency(listing.prices.base_price, listing.prices.currency)}
          </span>
        </div>
        <div className="flex items-center gap-2">
          <span className="text-muted-foreground text-sm">
            Frais de ménage:
          </span>
          <span className="font-medium">
            {formatCurrency(
              listing.prices.cleaning_fee,
              listing.prices.currency
            )}
          </span>
        </div>
        <div className="flex items-center gap-2">
          <span className="text-muted-foreground text-sm">Caution:</span>
          <span className="font-medium">
            {formatCurrency(
              Number(listing.prices.security_deposit_fee ?? 0),
              listing.prices.currency
            )}
          </span>
        </div>
        <div className="flex items-center gap-2">
          <span className="text-muted-foreground text-sm">
            Frais personne supplémentaire:
          </span>
          <span className="font-medium">
            {formatCurrency(
              listing.prices.extra_person_fee,
              listing.prices.currency
            )}
          </span>
        </div>
        <Separator className="my-3" />
        <div className="flex items-center gap-2">
          <span className="text-muted-foreground text-sm">Invités inclus:</span>
          <span className="font-medium">
            {listing.prices.guests_included} personnes
          </span>
        </div>
        {listing.prices.weekend_base_price && (
          <div className="flex items-center gap-2">
            <span className="text-muted-foreground text-sm">
              Prix week-end:
            </span>
            <span className="font-medium">
              {formatCurrency(
                listing.prices.weekend_base_price,
                listing.prices.currency
              )}
            </span>
          </div>
        )}
      </CardContent>
    </Card>
  );
}
