/**
 * Composant de filtres avancés pour les actifs
 */

'use client';

import { ChevronDown, ChevronUp } from 'lucide-react';

import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import {
  Collapsible,
  CollapsibleContent,
  CollapsibleTrigger,
} from '@/components/ui/collapsible';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';

import type { ActifsFilters } from '../types';

import { DateRangePicker } from './DateRangePicker';

interface AdvancedFiltersProps {
  filters: ActifsFilters;
  onFiltersChange: (filters: Partial<ActifsFilters>) => void;
  isOpen: boolean;
  onToggle: () => void;
  disabled?: boolean;
}

/**
 * Filtres avancés avec dates, superficie et chambres
 */
export function AdvancedFilters({
  filters,
  onFiltersChange,
  isOpen,
  onToggle,
  disabled = false,
}: AdvancedFiltersProps) {
  return (
    <Collapsible open={isOpen} onOpenChange={onToggle}>
      <CollapsibleTrigger asChild>
        <Button variant="outline" className="w-full" disabled={disabled}>
          {isOpen ? (
            <>
              <ChevronUp className="mr-2 h-4 w-4" />
              Masquer les filtres avancés
            </>
          ) : (
            <>
              <ChevronDown className="mr-2 h-4 w-4" />
              Afficher les filtres avancés
            </>
          )}
        </Button>
      </CollapsibleTrigger>
      <CollapsibleContent className="mt-4">
        <Card>
          <CardContent className="pt-6">
            <div className="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3">
              {/* Dates d'ouverture */}
              <div className="space-y-2">
                <Label>Date d&apos;ouverture (min)</Label>
                <DateRangePicker
                  label="Date min"
                  value={filters.date_ouverture_min ?? null}
                  onChange={date =>
                    onFiltersChange({ date_ouverture_min: date })
                  }
                  placeholder="Date minimum"
                  disabled={disabled}
                />
              </div>

              <div className="space-y-2">
                <Label>Date d&apos;ouverture (max)</Label>
                <DateRangePicker
                  label="Date max"
                  value={filters.date_ouverture_max ?? null}
                  onChange={date =>
                    onFiltersChange({ date_ouverture_max: date })
                  }
                  placeholder="Date maximum"
                  disabled={disabled}
                />
              </div>

              {/* Superficie */}
              <div className="space-y-2">
                <Label>Superficie (m²)</Label>
                <div className="flex gap-2">
                  <Input
                    type="number"
                    placeholder="Min"
                    value={filters.superficie_min ?? ''}
                    onChange={e =>
                      onFiltersChange({
                        superficie_min: e.target.value
                          ? parseInt(e.target.value, 10)
                          : undefined,
                      })
                    }
                    disabled={disabled}
                    className="w-full"
                  />
                  <Input
                    type="number"
                    placeholder="Max"
                    value={filters.superficie_max ?? ''}
                    onChange={e =>
                      onFiltersChange({
                        superficie_max: e.target.value
                          ? parseInt(e.target.value, 10)
                          : undefined,
                      })
                    }
                    disabled={disabled}
                    className="w-full"
                  />
                </div>
              </div>

              {/* Nombre de chambres */}
              <div className="space-y-2">
                <Label>Nombre de chambres</Label>
                <div className="flex gap-2">
                  <Input
                    type="number"
                    placeholder="Min"
                    value={filters.nb_chambres_min ?? ''}
                    onChange={e =>
                      onFiltersChange({
                        nb_chambres_min: e.target.value
                          ? parseInt(e.target.value, 10)
                          : undefined,
                      })
                    }
                    disabled={disabled}
                    className="w-full"
                  />
                  <Input
                    type="number"
                    placeholder="Max"
                    value={filters.nb_chambres_max ?? ''}
                    onChange={e =>
                      onFiltersChange({
                        nb_chambres_max: e.target.value
                          ? parseInt(e.target.value, 10)
                          : undefined,
                      })
                    }
                    disabled={disabled}
                    className="w-full"
                  />
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </CollapsibleContent>
    </Collapsible>
  );
}
