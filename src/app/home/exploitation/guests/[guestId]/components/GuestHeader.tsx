/**
 * Component for displaying guest header with name and contact info
 */

'use client';

import { User, Mail, Phone, Copy } from 'lucide-react';
import { toast } from 'sonner';

import { Badge } from '@/components/ui/badge';
import { Separator } from '@/components/ui/separator';
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from '@/components/ui/tooltip';

import { formatPhone, formatGuestName } from '../../lib';
import type { Guest } from '../../types';

interface GuestHeaderProps {
  guest: Guest;
}

export function GuestHeader({ guest }: GuestHeaderProps) {
  const handleCopyId = () => {
    navigator.clipboard.writeText(guest.id);
    toast.success('ID copié dans le presse-papier', {
      style: { color: 'green' },
      icon: '✓',
    });
  };

  const guestName = formatGuestName(guest);

  return (
    <>
      <div className="flex flex-col gap-3">
        <div className="flex flex-wrap items-center gap-3">
          <TooltipProvider>
            <Tooltip>
              <TooltipTrigger asChild>
                <h1
                  className="hover:text-primary/80 flex cursor-pointer items-center gap-2 text-3xl font-bold tracking-tight transition-colors"
                  onClick={handleCopyId}
                >
                  <User className="text-primary h-8 w-8" />
                  {guestName}
                </h1>
              </TooltipTrigger>
              <TooltipContent className="flex items-center gap-2">
                <Copy className="h-3 w-3" />
                <span>ID: {guest.id}</span>
              </TooltipContent>
            </Tooltip>
          </TooltipProvider>
          <Badge
            variant={guest.is_returning ? 'default' : 'secondary'}
            className="text-sm"
          >
            {guest.is_returning ? 'Client récurrent' : 'Nouveau client'}
          </Badge>
        </div>

        {/* Key info bar */}
        <div className="text-muted-foreground flex flex-wrap items-center gap-4 text-sm">
          {guest.email && (
            <div className="flex items-center gap-1">
              <Mail className="h-3.5 w-3.5" />
              <a
                href={`mailto:${guest.email}`}
                className="text-primary hover:underline"
              >
                {guest.email}
              </a>
            </div>
          )}
          {guest.phone && (
            <div className="flex items-center gap-1">
              <Phone className="h-3.5 w-3.5" />
              <a
                href={`tel:${guest.phone}`}
                className="text-primary hover:underline"
              >
                {formatPhone(guest.phone) || '-'}
              </a>
            </div>
          )}
        </div>
      </div>

      <Separator />
    </>
  );
}
