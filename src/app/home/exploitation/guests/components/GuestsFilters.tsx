'use client';

import { Search, Filter, RefreshCw, X } from 'lucide-react';

// External imports
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';

// Internal imports
import type { GuestFilters } from '../types';

interface GuestsFiltersProps {
  filters: GuestFilters;
  hasActiveFilters: boolean;
  activeFiltersCount: number;
  showFilters: boolean;
  isRefreshing: boolean;
  onSearchChange: (value: string) => void;
  onFilterChange: (
    key: keyof GuestFilters,
    value: string | number | boolean | undefined
  ) => void;
  onToggleFilters: () => void;
  onResetFilters: () => void;
  onRefresh: () => void;
}

export function GuestsFilters({
  filters,
  hasActiveFilters,
  activeFiltersCount,
  showFilters,
  isRefreshing,
  onSearchChange,
  onFilterChange,
  onToggleFilters,
  onResetFilters,
  onRefresh,
}: GuestsFiltersProps) {
  return (
    <Card>
      <CardHeader className="pb-4">
        <div className="flex items-center justify-between">
          <CardTitle className="text-base">Recherche et filtres</CardTitle>
          <div className="flex gap-2">
            <Button
              variant="outline"
              size="sm"
              onClick={onRefresh}
              disabled={isRefreshing}
              className="cursor-pointer"
            >
              <RefreshCw
                className={`mr-2 h-4 w-4 ${isRefreshing ? 'animate-spin' : ''}`}
              />
              Actualiser
            </Button>
            <Button
              variant="outline"
              size="sm"
              onClick={onToggleFilters}
              className="cursor-pointer"
            >
              <Filter className="mr-2 h-4 w-4" />
              Filtres
              {hasActiveFilters && (
                <span className="bg-primary text-primary-foreground ml-1 rounded-full px-1.5 py-0.5 text-xs">
                  {activeFiltersCount}
                </span>
              )}
            </Button>
            {hasActiveFilters && (
              <Button
                variant="outline"
                size="sm"
                onClick={onResetFilters}
                className="cursor-pointer"
              >
                <X className="mr-2 h-4 w-4" />
                Réinitialiser
              </Button>
            )}
          </div>
        </div>

        {/* Search Bar */}
        <div className="relative">
          <Search className="text-muted-foreground absolute top-1/2 left-3 h-4 w-4 -translate-y-1/2" />
          <Input
            placeholder="Rechercher par nom, email, téléphone..."
            value={filters.q}
            onChange={e => onSearchChange(e.target.value)}
            className="cursor-pointer pl-10"
          />
        </div>
      </CardHeader>

      {/* Advanced Filters */}
      {showFilters && (
        <CardContent className="pt-0">
          <div className="bg-card animate-in slide-in-from-top-2 space-y-4 rounded-lg border p-4">
            <div className="grid grid-cols-1 gap-4 md:grid-cols-2">
              <div className="space-y-2">
                <Label htmlFor="guest_id" className="text-sm font-medium">
                  ID Guest
                </Label>
                <Input
                  id="guest_id"
                  placeholder="ID spécifique du guest"
                  value={filters.guest_id ?? ''}
                  onChange={e => onFilterChange('guest_id', e.target.value)}
                  className="cursor-pointer"
                />
              </div>
              <div className="space-y-2">
                <Label
                  htmlFor="confirmation_code"
                  className="text-sm font-medium"
                >
                  Code de confirmation
                </Label>
                <Input
                  id="confirmation_code"
                  placeholder="Code de confirmation de réservation"
                  value={filters.confirmation_code ?? ''}
                  onChange={e =>
                    onFilterChange('confirmation_code', e.target.value)
                  }
                  className="cursor-pointer"
                />
              </div>
            </div>
          </div>
        </CardContent>
      )}
    </Card>
  );
}
