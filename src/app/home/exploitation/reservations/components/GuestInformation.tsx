import { Users, Mail, Phone, FileText, UserCheck } from 'lucide-react';
import Link from 'next/link';
import React from 'react';

import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Separator } from '@/components/ui/separator';

import { useGuestId } from '../hooks';
import type { ReservationDetails } from '../types/reservation-details';
import {
  extractGuestName,
  extractGuestEmail,
  extractGuestPhone,
} from '../utils/guest-helpers';

import { extractGuestBreakdown } from './data-processors';

interface GuestInformationProps {
  reservation: ReservationDetails;
}

export function GuestInformation({ reservation }: GuestInformationProps) {
  // Utiliser le hook pour récupérer le guest_id
  const guestId = useGuestId(reservation);
  const guests = extractGuestBreakdown(reservation);

  // Extraire les informations du guest
  const guestName = extractGuestName(reservation as Record<string, unknown>);
  const guestEmail = extractGuestEmail(reservation as Record<string, unknown>);
  const guestPhone = extractGuestPhone(reservation as Record<string, unknown>);

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2 text-lg">
          <Users className="h-5 w-5" /> Informations client
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-6">
        <div className="space-y-3">
          {guestName && (
            <div className="flex items-start gap-3">
              <UserCheck className="text-muted-foreground mt-0.5 h-5 w-5" />
              <div className="flex-1">
                {guestId ? (
                  <Link
                    href={`/home/exploitation/guests/${guestId}`}
                    className="text-primary inline-block text-lg font-semibold transition-colors hover:underline"
                  >
                    {guestName}
                  </Link>
                ) : (
                  <h3 className="text-lg font-semibold">{guestName}</h3>
                )}
              </div>
            </div>
          )}

          {(guestEmail ?? guestPhone) && (
            <div className="space-y-2 pl-8">
              {guestEmail && (
                <div className="flex items-center gap-2">
                  <Mail className="text-muted-foreground h-4 w-4" />
                  <a
                    href={`mailto:${guestEmail}`}
                    className="text-primary text-sm hover:underline"
                  >
                    {guestEmail}
                  </a>
                </div>
              )}
              {guestPhone && (
                <div className="flex items-center gap-2">
                  <Phone className="text-muted-foreground h-4 w-4" />
                  <a
                    href={`tel:${guestPhone}`}
                    className="text-primary text-sm hover:underline"
                  >
                    {guestPhone}
                  </a>
                </div>
              )}
            </div>
          )}
        </div>

        <Separator />

        <div>
          <h4 className="mb-3 text-sm font-medium">Composition des invités</h4>
          <div className="grid grid-cols-2 gap-4 sm:grid-cols-4">
            <div className="bg-muted/50 rounded-lg p-3 text-center">
              <div className="text-2xl font-bold">{guests.total}</div>
              <div className="text-muted-foreground text-xs">Total</div>
            </div>
            <div className="bg-muted/50 rounded-lg p-3 text-center">
              <div className="text-2xl font-bold">{guests.adults}</div>
              <div className="text-muted-foreground text-xs">
                Adulte{guests.adults > 1 ? 's' : ''}
              </div>
            </div>
            <div className="bg-muted/50 rounded-lg p-3 text-center">
              <div className="text-2xl font-bold">{guests.children}</div>
              <div className="text-muted-foreground text-xs">
                Enfant{guests.children > 1 ? 's' : ''}
              </div>
            </div>
            <div className="bg-muted/50 rounded-lg p-3 text-center">
              <div className="text-2xl font-bold">{guests.infants}</div>
              <div className="text-muted-foreground text-xs">
                Bébé{guests.infants > 1 ? 's' : ''}
              </div>
            </div>
          </div>
        </div>

        {reservation.guest_notes && (
          <>
            <Separator />
            <div>
              <div className="mb-2 flex items-center gap-2">
                <FileText className="text-muted-foreground h-4 w-4" />
                <h4 className="text-sm font-medium">Notes et commentaires</h4>
              </div>
              <div className="bg-muted/50 rounded-lg p-3">
                <div className="text-sm whitespace-pre-wrap">
                  {reservation.guest_notes}
                </div>
              </div>
            </div>
          </>
        )}
      </CardContent>
    </Card>
  );
}
