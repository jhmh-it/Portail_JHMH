import { useEffect, useState } from 'react';

import type { ReservationDetails } from '../types/reservation-details';

/**
 * Hook pour récupérer l'ID du guest depuis différentes sources
 * 1. D'abord depuis les données de la réservation
 * 2. Si non disponible, depuis l'API guestymirror
 */
export function useGuestId(reservation: ReservationDetails): string | null {
  const [guestIdFromApi, setGuestIdFromApi] = useState<string | null>(null);

  // Fonction helper pour lire la première valeur non-null
  const readFirst = <T>(...values: Array<T | null | undefined>): T | null => {
    for (const v of values) if (v !== undefined && v !== null) return v as T;
    return null;
  };

  // Essayer de récupérer guest_id depuis différents champs possibles
  const guestIdFromReservation = readFirst<string>(
    (reservation as Record<string, unknown>).GUEST_ID as string,
    (reservation as Record<string, unknown>).guest_id as string,
    (reservation as Record<string, unknown>).GuestId as string,
    (reservation as Record<string, unknown>).guestId as string
  );

  // Récupérer le guest_id depuis l'API si nécessaire
  useEffect(() => {
    // Si on a déjà le guest_id, pas besoin de faire un appel API
    if (guestIdFromReservation) {
      return;
    }

    const confirmationCode =
      reservation.confirmationCode ??
      ((reservation as Record<string, unknown>).REF as string);

    if (!confirmationCode) {
      return;
    }

    // Appeler notre API Next.js qui appellera l'API JHMH
    fetch(`/api/reservations?confirmation_code=${confirmationCode}`)
      .then(res => res.json())
      .then(data => {
        // Extraire le guest_id de la première réservation retournée
        const guestId = data?.data?.reservations?.[0]?.guest_id;
        if (guestId) {
          setGuestIdFromApi(guestId);
        }
      })
      .catch(err => {
        // En production, on pourrait logger cela différemment
        if (process.env.NODE_ENV === 'development') {
          console.error('Erreur lors de la récupération du guest_id:', err);
        }
      });
  }, [reservation, guestIdFromReservation]);

  // Retourner le guest_id de l'API si disponible, sinon celui de la réservation
  return guestIdFromApi ?? guestIdFromReservation;
}
