/**
 * Types pour les réservations JHMH
 */

/**
 * Structure d'une réservation externe
 */
export interface ExternalReservation {
  confirmationCode: string;
  guest_name: string | null;
  listing_name: string | null;
  checkin_date: string | null;
  checkout_date: string | null;
  status: string;
  ota: string;
  total_ttc?: number | null;
  currency?: string;
  nights?: number;
  number_of_guests?: number | null;
  reportGenerationTimestamp?: string | null;
}

/**
 * Réponse de l'API pour une liste de réservations
 */
export interface ExternalReservationsResponse {
  data: ExternalReservation[];
  error: boolean;
  message: string;
  meta: {
    filters_applied: Record<string, string | number | undefined>;
    page: number;
    page_size: number;
    total: number;
    total_pages: number;
  };
  timestamp: string;
}

/**
 * Paramètres de filtrage pour les réservations
 */
export interface ReservationFilters {
  page?: number;
  page_size?: number;
  checkinDateFrom?: string;
  checkinDateTo?: string;
  checkoutDateFrom?: string;
  checkoutDateTo?: string;
  status?: string;
  ota?: string;
  q?: string;
  /** Code de confirmation exact (filtre backend: confirmation_code) */
  confirmationCode?: string;
  amountMin?: number;
  amountMax?: number;
  nightsMin?: number;
  nightsMax?: number;
  guestsMin?: number;
  guestsMax?: number;
  currency?: string;
}

/**
 * Réponse standardisée pour les services de réservations
 */
export interface ReservationsServiceResponse {
  success: boolean;
  data: ExternalReservation[];
  total: number;
  error?: string;
}

/**
 * Réponse pour une réservation unique
 */
export interface ReservationServiceResponse {
  success: boolean;
  data: ExternalReservation | null;
  error?: string;
}

/**
 * Statuts possibles d'une réservation
 */
export enum ReservationStatus {
  CONFIRMED = 'confirmed',
  CANCELLED = 'cancelled',
  PENDING = 'pending',
  COMPLETED = 'completed',
}

/**
 * Type pour les overrides de réservation
 */
export interface ReservationOverride {
  field: string;
  value: unknown;
  overriddenAt: string;
  overriddenBy?: string;
}
