{
  "definitions": {},
  "info": {
    "description": "powered by Flasgger",
    "termsOfService": "/tos",
    "title": "API Portail JHMH",
    "version": "0.0.1"
  },
  "paths": {
    "/": {
      "get": {
        "operationId": "get_home",
        "responses": {
          "200": {
            "description": "Page HTML d'accueil",
            "schema": {
              "format": "html",
              "type": "string"
            }
          }
        },
        "summary": "Page d'accueil HTML de l'API",
        "tags": ["Accueil"]
      }
    },
    "/actifs": {
      "get": {
        "operationId": "list_assets",
        "responses": {
          "200": {
            "description": "Liste des actifs",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur interne",
            "schema": {
              "properties": {
                "error": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Obtenir la liste des actifs",
        "tags": ["Actifs"]
      }
    },
    "/compta/test-connection": {
      "get": {
        "operationId": "test_accounting_connection",
        "responses": {
          "200": {
            "description": "Confirme que la connexion au projet a réussi."
          },
          "500": {
            "description": "Erreur lors de la tentative de connexion."
          }
        },
        "summary": "Endpoint d'exemple pour tester la connexion au projet 'ql-accounting-tools-sql'.",
        "tags": ["Comptabilité"]
      }
    },
    "/count-checkin-checkout": {
      "post": {
        "operationId": "count_checkin_checkout",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "actif": {
                  "description": "Le profil actif (optionnel)",
                  "type": "string"
                },
                "date": {
                  "description": "Préfixe de date pour filtrer (ex:YYYY-MM-DD)",
                  "format": "date",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Réponse avec les totaux de check-in/check-out",
            "schema": {
              "properties": {
                "todayBusiness": {
                  "properties": {
                    "checkInsToday": {
                      "type": "integer"
                    },
                    "checkOutsToday": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Paramètre date manquant",
            "schema": {
              "properties": {
                "error": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Erreur interne",
            "schema": {
              "properties": {
                "error": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Compter les événements de check-in et check-out",
        "tags": ["Rapports"]
      }
    },
    "/count-checkin-checkout/database-info": {
      "post": {
        "operationId": "assets_get_database_info",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "actif": {
                  "description": "Le profil actif (obligatoire)",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Informations de base de données pour le profil",
            "schema": {
              "properties": {
                "databaseInfo": {
                  "properties": {
                    "totalFutureBookings": {
                      "type": "integer"
                    },
                    "totalInvoicedBookings": {
                      "type": "integer"
                    },
                    "totalValidBookings": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Récupérer les informations de base de données pour un profil actif donné.",
        "tags": ["Rapports"]
      }
    },
    "/database-info": {
      "post": {
        "operationId": "admin_get_database_info",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "actif": {
                  "description": "Le profil actif (obligatoire)",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Informations de base de données pour le profil",
            "schema": {
              "properties": {
                "databaseInfo": {
                  "properties": {
                    "includingNoShows": {
                      "type": "string"
                    },
                    "lastUpdate": {
                      "type": "string"
                    },
                    "totalActiveCheckedIns": {
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "outOf": {
                          "type": "integer"
                        },
                        "percentage": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "totalFutureBookings": {
                      "type": "integer"
                    },
                    "totalInvoicedBookings": {
                      "type": "integer"
                    },
                    "totalValidBookings": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Récupérer les informations de base de données pour un profil actif donné.",
        "tags": ["Rapports"]
      }
    },
    "/global-requete/double-call": {
      "post": {
        "operationId": "admin_double_call",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "actif": {
                  "description": "Le profil actif (obligatoire)",
                  "type": "string"
                },
                "date": {
                  "description": "Date au format YYYY-MM-DD (obligatoire)",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Réponse combinée",
            "schema": {
              "properties": {
                "databaseInfo": {
                  "type": "object"
                },
                "todayBusiness": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Appelle /count-checkin-checkout/ et /database-info/ et retourne les deux réponses dans un seul JSON.",
        "tags": ["Rapports"]
      }
    },
    "/greg/categories": {
      "get": {
        "description": "Retourne un tableau de toutes les catégories existantes avec leur nom et description.",
        "operationId": "greg_list_categories",
        "responses": {
          "200": {
            "description": "Liste des catégories récupérée avec succès",
            "schema": {
              "items": {
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des catégories"
          }
        },
        "summary": "Récupère la liste de toutes les catégories.",
        "tags": ["Categories"]
      },
      "post": {
        "description": "Crée une nouvelle catégorie en fournissant un nom et une définition. Retourne la catégorie créée si succès.",
        "operationId": "greg_create_category",
        "parameters": [
          {
            "description": "Les informations de la catégorie à créer.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "category_name": {
                  "description": "Nom de la catégorie",
                  "type": "string"
                },
                "definition": {
                  "description": "Définition de la catégorie",
                  "type": "string"
                }
              },
              "required": ["category_name", "definition"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Catégorie créée avec succès"
          },
          "400": {
            "description": "Données manquantes ou invalides"
          },
          "500": {
            "description": "Erreur lors de la création de la catégorie"
          }
        },
        "summary": "Crée une nouvelle catégorie.",
        "tags": ["Categories"]
      }
    },
    "/greg/categories/{category_name}": {
      "delete": {
        "description": "Supprime la catégorie spécifiée. Retourne une confirmation si succès, ou une erreur si la catégorie n'existe pas.",
        "operationId": "greg_delete_category",
        "parameters": [
          {
            "description": "Nom de la catégorie à supprimer",
            "in": "path",
            "name": "category_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Catégorie supprimée avec succès"
          },
          "404": {
            "description": "Catégorie non trouvée"
          },
          "500": {
            "description": "Erreur lors de la suppression de la catégorie"
          }
        },
        "summary": "Supprime une catégorie par son nom.",
        "tags": ["Categories"]
      }
    },
    "/greg/documents": {
      "get": {
        "description": "Retourne un tableau de tous les documents existants avec leurs champs principaux.",
        "operationId": "greg_list_documents",
        "responses": {
          "200": {
            "description": "Liste des documents récupérée avec succès",
            "schema": {
              "items": {
                "properties": {
                  "categories": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "sheet_name": {
                    "type": "string"
                  },
                  "spreadsheet_name": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des documents"
          }
        },
        "summary": "Récupère la liste de tous les documents.",
        "tags": ["Documents"]
      },
      "post": {
        "description": "Crée un document en fournissant les champs requis. Retourne le document créé si succès.",
        "operationId": "greg_create_document",
        "parameters": [
          {
            "description": "Les informations du document à créer.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "categories": {
                  "description": "Catégories du document",
                  "type": "string"
                },
                "pending_for_review": {
                  "description": "Si le document est en attente de révision",
                  "type": "boolean"
                },
                "sheet_name": {
                  "description": "Nom de la feuille",
                  "type": "string"
                },
                "spreadsheet_name": {
                  "description": "Nom de la feuille de calcul",
                  "type": "string"
                },
                "summary": {
                  "description": "Résumé du document",
                  "type": "string"
                }
              },
              "required": ["spreadsheet_name", "sheet_name"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Document créé avec succès"
          },
          "400": {
            "description": "Données manquantes ou invalides"
          },
          "500": {
            "description": "Erreur lors de la création du document"
          }
        },
        "summary": "Crée un nouveau document.",
        "tags": ["Documents"]
      }
    },
    "/greg/documents/pending": {
      "get": {
        "operationId": "greg_get_pending_documents",
        "responses": {
          "200": {
            "description": "Liste des documents en attente récupérée avec succès",
            "schema": {
              "items": {
                "properties": {
                  "categories": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "pending_for_review": {
                    "type": "boolean"
                  },
                  "sheet_name": {
                    "type": "string"
                  },
                  "spreadsheet_name": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des documents en attente"
          }
        },
        "summary": "Récupère la liste des documents en attente.",
        "tags": ["Documents"]
      }
    },
    "/greg/documents/{document_id}": {
      "delete": {
        "operationId": "greg_delete_document",
        "parameters": [
          {
            "description": "ID unique du document à supprimer",
            "in": "path",
            "name": "document_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Document supprimé avec succès"
          },
          "404": {
            "description": "Document non trouvé"
          },
          "500": {
            "description": "Erreur lors de la suppression du document"
          }
        },
        "summary": "Supprime un document par son ID.",
        "tags": ["Documents"]
      },
      "get": {
        "description": "Retourne les détails du document correspondant à l'ID fourni. Retourne une erreur si le document n'existe pas.",
        "operationId": "greg_get_document",
        "parameters": [
          {
            "description": "ID unique du document",
            "in": "path",
            "name": "document_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Détails du document récupérés avec succès",
            "schema": {
              "properties": {
                "categories": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "pending_for_review": {
                  "type": "boolean"
                },
                "sheet_name": {
                  "type": "string"
                },
                "spreadsheet_name": {
                  "type": "string"
                },
                "summary": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Document non trouvé"
          },
          "500": {
            "description": "Erreur lors de la récupération du document"
          }
        },
        "summary": "Récupère un document par son ID.",
        "tags": ["Documents"]
      },
      "put": {
        "operationId": "greg_update_document",
        "parameters": [
          {
            "description": "ID unique du document",
            "in": "path",
            "name": "document_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "categories": {
                  "description": "Catégories du document",
                  "type": "string"
                },
                "pending_for_review": {
                  "description": "Si le document est en attente de révision",
                  "type": "boolean"
                },
                "sheet_name": {
                  "description": "Nom de la feuille",
                  "type": "string"
                },
                "spreadsheet_name": {
                  "description": "Nom de la feuille de calcul",
                  "type": "string"
                },
                "summary": {
                  "description": "Résumé du document",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document mis à jour avec succès"
          },
          "400": {
            "description": "Aucun champ à mettre à jour"
          },
          "404": {
            "description": "Document non trouvé"
          },
          "500": {
            "description": "Erreur lors de la mise à jour du document"
          }
        },
        "summary": "Met à jour un document existant.",
        "tags": ["Documents"]
      }
    },
    "/greg/documents/{document_id}/assign-spaces": {
      "post": {
        "operationId": "greg_assign_spaces_to_document",
        "parameters": [
          {
            "description": "ID unique du document",
            "in": "path",
            "name": "document_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "space_ids": {
                  "description": "Liste des IDs d'espaces à assigner",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": ["space_ids"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Espaces assignés avec succès"
          },
          "400": {
            "description": "Liste d'espaces manquante"
          },
          "500": {
            "description": "Erreur lors de l'assignation des espaces"
          }
        },
        "summary": "Assigne des espaces à un document.",
        "tags": ["Documents"]
      }
    },
    "/greg/health": {
      "get": {
        "operationId": "greg_health_check",
        "responses": {
          "200": {
            "description": "API en bonne santé",
            "schema": {
              "properties": {
                "service": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "timestamp": {
                  "format": "date-time",
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Vérifie la santé de l'API Greg.",
        "tags": ["System"]
      }
    },
    "/greg/reminders": {
      "get": {
        "operationId": "list_reminders",
        "parameters": [
          {
            "description": "Type de rappel pour filtrer",
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Statut du rappel pour filtrer",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des rappels récupérée avec succès",
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "due_date": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "reminder_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des rappels"
          }
        },
        "summary": "Récupère la liste de tous les rappels avec filtrage optionnel par type et statut.",
        "tags": ["Reminders"]
      },
      "post": {
        "operationId": "create_reminder",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "assigned_to": {
                  "description": "Personne assignée au rappel",
                  "type": "string"
                },
                "description": {
                  "description": "Description du rappel",
                  "type": "string"
                },
                "due_date": {
                  "description": "Date d'échéance du rappel",
                  "format": "date-time",
                  "type": "string"
                },
                "notes": {
                  "description": "Notes additionnelles",
                  "type": "string"
                },
                "priority": {
                  "description": "Priorité du rappel (low, medium, high)",
                  "type": "string"
                },
                "title": {
                  "description": "Titre du rappel",
                  "type": "string"
                },
                "type": {
                  "description": "Type du rappel",
                  "type": "string"
                }
              },
              "required": ["title", "type", "due_date"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Rappel créé avec succès"
          },
          "400": {
            "description": "Données manquantes ou invalides"
          },
          "500": {
            "description": "Erreur lors de la création du rappel"
          }
        },
        "summary": "Crée un nouveau rappel.",
        "tags": ["Reminders"]
      }
    },
    "/greg/reminders/{reminder_id}": {
      "delete": {
        "operationId": "delete_reminder",
        "parameters": [
          {
            "description": "ID unique du rappel à supprimer",
            "in": "path",
            "name": "reminder_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Rappel supprimé avec succès"
          },
          "404": {
            "description": "Rappel non trouvé"
          },
          "500": {
            "description": "Erreur lors de la suppression du rappel"
          }
        },
        "summary": "Supprime un rappel.",
        "tags": ["Reminders"]
      },
      "get": {
        "operationId": "get_reminder",
        "parameters": [
          {
            "description": "ID unique du rappel",
            "in": "path",
            "name": "reminder_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Détails du rappel récupérés avec succès",
            "schema": {
              "properties": {
                "assigned_to": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "due_date": {
                  "format": "date-time",
                  "type": "string"
                },
                "notes": {
                  "type": "string"
                },
                "priority": {
                  "type": "string"
                },
                "reminder_id": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Rappel non trouvé"
          },
          "500": {
            "description": "Erreur lors de la récupération du rappel"
          }
        },
        "summary": "Récupère les détails d'un rappel spécifique par son ID.",
        "tags": ["Reminders"]
      },
      "put": {
        "operationId": "update_reminder",
        "parameters": [
          {
            "description": "ID unique du rappel",
            "in": "path",
            "name": "reminder_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "assigned_to": {
                  "description": "Personne assignée au rappel",
                  "type": "string"
                },
                "description": {
                  "description": "Description du rappel",
                  "type": "string"
                },
                "due_date": {
                  "description": "Date d'échéance du rappel",
                  "format": "date-time",
                  "type": "string"
                },
                "notes": {
                  "description": "Notes additionnelles",
                  "type": "string"
                },
                "priority": {
                  "description": "Priorité du rappel",
                  "type": "string"
                },
                "status": {
                  "description": "Statut du rappel",
                  "type": "string"
                },
                "title": {
                  "description": "Titre du rappel",
                  "type": "string"
                },
                "type": {
                  "description": "Type du rappel",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rappel mis à jour avec succès"
          },
          "400": {
            "description": "Aucun champ à mettre à jour"
          },
          "404": {
            "description": "Rappel non trouvé"
          },
          "500": {
            "description": "Erreur lors de la mise à jour du rappel"
          }
        },
        "summary": "Met à jour un rappel existant.",
        "tags": ["Reminders"]
      }
    },
    "/greg/shifts": {
      "get": {
        "operationId": "list_shifts",
        "parameters": [
          {
            "description": "Localisation pour filtrer les équipes",
            "in": "query",
            "name": "location",
            "required": false,
            "type": "string"
          },
          {
            "description": "Statut pour filtrer les équipes",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des équipes récupérée avec succès",
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "shift_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des équipes"
          }
        },
        "summary": "Récupère la liste de toutes les équipes avec filtrage optionnel par location et statut.",
        "tags": ["Shifts"]
      },
      "post": {
        "operationId": "create_shift",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "capacity": {
                  "description": "Capacité de l'équipe",
                  "type": "integer"
                },
                "end_time": {
                  "description": "Heure de fin",
                  "type": "string"
                },
                "location": {
                  "description": "Localisation de l'équipe",
                  "type": "string"
                },
                "name": {
                  "description": "Nom de l'équipe",
                  "type": "string"
                },
                "shift_type": {
                  "description": "Type d'équipe",
                  "type": "string"
                },
                "start_time": {
                  "description": "Heure de début",
                  "type": "string"
                },
                "status": {
                  "description": "Statut de l'équipe (default active)",
                  "type": "string"
                }
              },
              "required": ["name", "location", "shift_type"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Équipe créée avec succès"
          },
          "400": {
            "description": "Données manquantes ou invalides"
          },
          "500": {
            "description": "Erreur lors de la création de l'équipe"
          }
        },
        "summary": "Crée une nouvelle équipe.",
        "tags": ["Shifts"]
      }
    },
    "/greg/shifts/{shift_id}": {
      "delete": {
        "operationId": "delete_shift",
        "parameters": [
          {
            "description": "ID unique de l'équipe à supprimer",
            "in": "path",
            "name": "shift_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Équipe supprimée avec succès"
          },
          "404": {
            "description": "Équipe non trouvée"
          },
          "500": {
            "description": "Erreur lors de la suppression de l'équipe"
          }
        },
        "summary": "Supprime une équipe.",
        "tags": ["Shifts"]
      },
      "get": {
        "operationId": "get_shift",
        "parameters": [
          {
            "description": "ID unique de l'équipe",
            "in": "path",
            "name": "shift_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Détails de l'équipe récupérés avec succès",
            "schema": {
              "properties": {
                "capacity": {
                  "type": "integer"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "end_time": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "shift_id": {
                  "type": "string"
                },
                "shift_type": {
                  "type": "string"
                },
                "start_time": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Équipe non trouvée"
          },
          "500": {
            "description": "Erreur lors de la récupération de l'équipe"
          }
        },
        "summary": "Récupère les détails d'une équipe spécifique par son ID.",
        "tags": ["Shifts"]
      },
      "put": {
        "operationId": "update_shift",
        "parameters": [
          {
            "description": "ID unique de l'équipe",
            "in": "path",
            "name": "shift_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "capacity": {
                  "description": "Capacité de l'équipe",
                  "type": "integer"
                },
                "end_time": {
                  "description": "Heure de fin",
                  "type": "string"
                },
                "location": {
                  "description": "Localisation de l'équipe",
                  "type": "string"
                },
                "name": {
                  "description": "Nom de l'équipe",
                  "type": "string"
                },
                "shift_type": {
                  "description": "Type d'équipe",
                  "type": "string"
                },
                "start_time": {
                  "description": "Heure de début",
                  "type": "string"
                },
                "status": {
                  "description": "Statut de l'équipe",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Équipe mise à jour avec succès"
          },
          "400": {
            "description": "Aucun champ à mettre à jour"
          },
          "404": {
            "description": "Équipe non trouvée"
          },
          "500": {
            "description": "Erreur lors de la mise à jour de l'équipe"
          }
        },
        "summary": "Met à jour une équipe existante.",
        "tags": ["Shifts"]
      }
    },
    "/greg/space-document-access": {
      "delete": {
        "operationId": "delete_space_document_access",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "document_id": {
                  "description": "ID du document",
                  "type": "string"
                },
                "space_id": {
                  "description": "ID de l'espace",
                  "type": "string"
                }
              },
              "required": ["space_id", "document_id"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accès supprimé avec succès"
          },
          "400": {
            "description": "Données manquantes ou invalides"
          },
          "404": {
            "description": "Accès non trouvé"
          },
          "500": {
            "description": "Erreur lors de la suppression de l'accès"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Supprime un accès document-espace.",
        "tags": ["Access"]
      },
      "get": {
        "operationId": "list_space_document_access",
        "responses": {
          "200": {
            "description": "Liste des accès récupérée avec succès",
            "schema": {
              "items": {
                "properties": {
                  "document_id": {
                    "type": "string"
                  },
                  "granted_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "space_id": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des accès"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Récupère la liste de tous les accès aux documents par espace.",
        "tags": ["Access"]
      },
      "post": {
        "operationId": "create_space_document_access",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "document_id": {
                  "description": "ID du document",
                  "type": "string"
                },
                "space_id": {
                  "description": "ID de l'espace",
                  "type": "string"
                }
              },
              "required": ["space_id", "document_id"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Accès créé avec succès"
          },
          "400": {
            "description": "Données manquantes ou invalides"
          },
          "500": {
            "description": "Erreur lors de la création de l'accès"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Crée un nouvel accès document-espace.",
        "tags": ["Access"]
      }
    },
    "/greg/space-document-access/document/{document_id}": {
      "get": {
        "operationId": "get_spaces_for_document",
        "parameters": [
          {
            "description": "ID unique du document",
            "in": "path",
            "name": "document_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des espaces pour le document récupérée avec succès",
            "schema": {
              "items": {
                "properties": {
                  "document_id": {
                    "type": "string"
                  },
                  "granted_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "space_id": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des espaces"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Récupère tous les espaces ayant accès à un document spécifique.",
        "tags": ["Access"]
      }
    },
    "/greg/space-document-access/space/{space_id}": {
      "get": {
        "operationId": "get_documents_for_space",
        "parameters": [
          {
            "description": "ID unique de l'espace",
            "in": "path",
            "name": "space_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des documents pour l'espace récupérée avec succès",
            "schema": {
              "items": {
                "properties": {
                  "document_id": {
                    "type": "string"
                  },
                  "granted_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "space_id": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des documents"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Récupère tous les documents accessibles pour un espace spécifique.",
        "tags": ["Access"]
      }
    },
    "/greg/space-history-access": {
      "delete": {
        "operationId": "delete_space_history_access",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "space_id": {
                  "description": "ID de l'espace demandeur",
                  "type": "string"
                },
                "space_target_id": {
                  "description": "ID de l'espace cible",
                  "type": "string"
                }
              },
              "required": ["space_id", "space_target_id"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accès historique supprimé avec succès"
          },
          "400": {
            "description": "Données manquantes ou invalides"
          },
          "404": {
            "description": "Accès historique non trouvé"
          },
          "500": {
            "description": "Erreur lors de la suppression de l'accès historique"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Supprime un accès historique entre espaces.",
        "tags": ["Access"]
      },
      "get": {
        "operationId": "list_space_history_access",
        "responses": {
          "200": {
            "description": "Liste des accès historiques récupérée avec succès",
            "schema": {
              "items": {
                "properties": {
                  "granted_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  },
                  "space_id": {
                    "type": "string"
                  },
                  "space_target_id": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des accès historiques"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Récupère la liste de tous les accès historiques entre espaces.",
        "tags": ["Access"]
      },
      "post": {
        "operationId": "create_space_history_access",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "note": {
                  "description": "Note sur l'accès",
                  "type": "string"
                },
                "space_id": {
                  "description": "ID de l'espace demandeur",
                  "type": "string"
                },
                "space_target_id": {
                  "description": "ID de l'espace cible",
                  "type": "string"
                }
              },
              "required": ["space_id", "space_target_id"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Accès historique créé avec succès"
          },
          "400": {
            "description": "Données manquantes ou invalides"
          },
          "500": {
            "description": "Erreur lors de la création de l'accès historique"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Crée un nouvel accès historique entre espaces.",
        "tags": ["Access"]
      },
      "put": {
        "operationId": "update_space_history_access",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "note": {
                  "description": "Note mise à jour sur l'accès",
                  "type": "string"
                },
                "space_id": {
                  "description": "ID de l'espace demandeur",
                  "type": "string"
                },
                "space_target_id": {
                  "description": "ID de l'espace cible",
                  "type": "string"
                }
              },
              "required": ["space_id", "space_target_id"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accès historique mis à jour avec succès"
          },
          "400": {
            "description": "Données manquantes ou invalides"
          },
          "404": {
            "description": "Accès historique non trouvé"
          },
          "500": {
            "description": "Erreur lors de la mise à jour de l'accès historique"
          }
        },
        "summary": "Met à jour un accès historique entre espaces.",
        "tags": ["Access"]
      }
    },
    "/greg/space-history-access/{space_id}": {
      "get": {
        "operationId": "get_space_history_access_by_space",
        "parameters": [
          {
            "description": "ID unique de l'espace",
            "in": "path",
            "name": "space_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des accès historiques pour l'espace récupérée avec succès",
            "schema": {
              "items": {
                "properties": {
                  "granted_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  },
                  "space_id": {
                    "type": "string"
                  },
                  "space_target_id": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des accès historiques"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Récupère tous les accès historiques pour un espace spécifique.",
        "tags": ["Access"]
      }
    },
    "/greg/spaces": {
      "get": {
        "operationId": "list_spaces",
        "parameters": [
          {
            "description": "Type d'espace pour filtrer les résultats (ex. ROOM)",
            "in": "query",
            "name": "space_type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des espaces récupérée avec succès",
            "schema": {
              "items": {
                "properties": {
                  "notes": {
                    "type": "string"
                  },
                  "space_id": {
                    "type": "string"
                  },
                  "space_name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des espaces"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Récupère la liste de tous les espaces avec filtrage optionnel par type.",
        "tags": ["Spaces"]
      },
      "post": {
        "operationId": "create_space",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "notes": {
                  "description": "Notes sur l'espace",
                  "type": "string"
                },
                "space_id": {
                  "description": "ID unique de l'espace",
                  "type": "string"
                },
                "space_name": {
                  "description": "Nom de l'espace",
                  "type": "string"
                },
                "type": {
                  "description": "Type de l'espace",
                  "type": "string"
                }
              },
              "required": ["space_id"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Espace créé avec succès"
          },
          "400": {
            "description": "Données manquantes ou invalides"
          },
          "500": {
            "description": "Erreur lors de la création de l'espace"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Crée un nouvel espace.",
        "tags": ["Spaces"]
      }
    },
    "/greg/spaces/{space_id}": {
      "delete": {
        "operationId": "delete_space",
        "parameters": [
          {
            "description": "ID unique de l'espace à supprimer",
            "in": "path",
            "name": "space_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Espace supprimé avec succès"
          },
          "404": {
            "description": "Espace non trouvé"
          },
          "500": {
            "description": "Erreur lors de la suppression de l'espace"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Supprime un espace.",
        "tags": ["Spaces"]
      },
      "get": {
        "operationId": "get_space",
        "parameters": [
          {
            "description": "ID unique de l'espace",
            "in": "path",
            "name": "space_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Détails de l'espace récupérés avec succès",
            "schema": {
              "properties": {
                "notes": {
                  "type": "string"
                },
                "space_id": {
                  "type": "string"
                },
                "space_name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Espace non trouvé"
          },
          "500": {
            "description": "Erreur lors de la récupération de l'espace"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Récupère les détails d'un espace spécifique par son ID.",
        "tags": ["Spaces"]
      },
      "put": {
        "operationId": "update_space",
        "parameters": [
          {
            "description": "ID unique de l'espace",
            "in": "path",
            "name": "space_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "notes": {
                  "description": "Notes sur l'espace",
                  "type": "string"
                },
                "space_name": {
                  "description": "Nom de l'espace",
                  "type": "string"
                },
                "type": {
                  "description": "Type de l'espace",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Espace mis à jour avec succès"
          },
          "400": {
            "description": "Aucun champ à mettre à jour"
          },
          "404": {
            "description": "Espace non trouvé"
          },
          "500": {
            "description": "Erreur lors de la mise à jour de l'espace"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Met à jour un espace existant.",
        "tags": ["Spaces"]
      }
    },
    "/greg/spaces/{space_id}/assign-documents": {
      "post": {
        "operationId": "assign_documents_to_space",
        "parameters": [
          {
            "description": "ID unique de l'espace",
            "in": "path",
            "name": "space_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "document_ids": {
                  "description": "Liste des IDs de documents à assigner",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": ["document_ids"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Documents assignés avec succès"
          },
          "400": {
            "description": "Liste de documents manquante"
          },
          "500": {
            "description": "Erreur lors de l'assignation des documents"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Assigne des documents à un espace spécifique.",
        "tags": ["Spaces"]
      }
    },
    "/greg/spaces/{space_id}/assign-history-access": {
      "post": {
        "operationId": "assign_history_access_to_space",
        "parameters": [
          {
            "description": "ID unique de l'espace",
            "in": "path",
            "name": "space_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "notes": {
                  "description": "Notes associées aux accès par space_id",
                  "type": "object"
                },
                "target_space_ids": {
                  "description": "Liste des IDs d'espaces cibles pour l'accès historique",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": ["target_space_ids"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accès historique assigné avec succès"
          },
          "400": {
            "description": "Liste d'espaces cibles manquante"
          },
          "500": {
            "description": "Erreur lors de l'assignation de l'accès historique"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Assigne l'accès à l'historique d'autres espaces à un espace spécifique.",
        "tags": ["Spaces"]
      }
    },
    "/greg/stats": {
      "get": {
        "operationId": "get_greg_stats",
        "responses": {
          "200": {
            "description": "Statistiques du système récupérées avec succès",
            "schema": {
              "properties": {
                "timestamp": {
                  "description": "Horodatage de la récupération",
                  "type": "string"
                },
                "total_accesses": {
                  "description": "Nombre total d'accès",
                  "type": "integer"
                },
                "total_categories": {
                  "description": "Nombre total de catégories",
                  "type": "integer"
                },
                "total_documents": {
                  "description": "Nombre total de documents",
                  "type": "integer"
                },
                "total_reminders": {
                  "description": "Nombre total de rappels",
                  "type": "integer"
                },
                "total_shifts": {
                  "description": "Nombre total d'équipes",
                  "type": "integer"
                },
                "total_spaces": {
                  "description": "Nombre total d'espaces",
                  "type": "integer"
                },
                "total_users": {
                  "description": "Nombre total d'utilisateurs",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des statistiques"
          }
        },
        "summary": "Récupère les statistiques du système Greg.",
        "tags": ["System"]
      }
    },
    "/greg/users": {
      "get": {
        "operationId": "list_users",
        "parameters": [
          {
            "description": "Rôle pour filtrer les utilisateurs",
            "in": "query",
            "name": "role",
            "required": false,
            "type": "string"
          },
          {
            "description": "Statut pour filtrer les utilisateurs",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des utilisateurs récupérée avec succès",
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur lors de la récupération des utilisateurs"
          }
        },
        "summary": "Récupère la liste de tous les utilisateurs avec filtrage optionnel par role et statut.",
        "tags": ["Users"]
      },
      "post": {
        "operationId": "create_user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "email": {
                  "description": "Email de l'utilisateur",
                  "type": "string"
                },
                "first_name": {
                  "description": "Prénom de l'utilisateur",
                  "type": "string"
                },
                "last_name": {
                  "description": "Nom de l'utilisateur",
                  "type": "string"
                },
                "preferences": {
                  "description": "Préférences de l'utilisateur",
                  "type": "object"
                },
                "role": {
                  "description": "Rôle de l'utilisateur",
                  "type": "string"
                },
                "status": {
                  "description": "Statut de l'utilisateur (default active)",
                  "type": "string"
                }
              },
              "required": ["first_name", "last_name", "email", "role"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Utilisateur créé avec succès"
          },
          "400": {
            "description": "Données manquantes ou invalides"
          },
          "500": {
            "description": "Erreur lors de la création de l'utilisateur"
          }
        },
        "summary": "Crée un nouvel utilisateur.",
        "tags": ["Users"]
      }
    },
    "/greg/users/{user_id}": {
      "delete": {
        "operationId": "delete_user",
        "parameters": [
          {
            "description": "ID unique de l'utilisateur à supprimer",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateur supprimé avec succès"
          },
          "404": {
            "description": "Utilisateur non trouvé"
          },
          "500": {
            "description": "Erreur lors de la suppression de l'utilisateur"
          }
        },
        "summary": "Supprime un utilisateur.",
        "tags": ["Users"]
      },
      "get": {
        "operationId": "get_user",
        "parameters": [
          {
            "description": "ID unique de l'utilisateur",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Détails de l'utilisateur récupérés avec succès",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_active": {
                  "format": "date-time",
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "preferences": {
                  "type": "object"
                },
                "role": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Utilisateur non trouvé"
          },
          "500": {
            "description": "Erreur lors de la récupération de l'utilisateur"
          }
        },
        "summary": "Récupère les détails d'un utilisateur spécifique par son ID.",
        "tags": ["Users"]
      },
      "put": {
        "operationId": "update_user",
        "parameters": [
          {
            "description": "ID unique de l'utilisateur",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "email": {
                  "description": "Email de l'utilisateur",
                  "type": "string"
                },
                "first_name": {
                  "description": "Prénom de l'utilisateur",
                  "type": "string"
                },
                "last_name": {
                  "description": "Nom de l'utilisateur",
                  "type": "string"
                },
                "preferences": {
                  "description": "Préférences de l'utilisateur",
                  "type": "object"
                },
                "role": {
                  "description": "Rôle de l'utilisateur",
                  "type": "string"
                },
                "status": {
                  "description": "Statut de l'utilisateur",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateur mis à jour avec succès"
          },
          "400": {
            "description": "Aucun champ à mettre à jour"
          },
          "404": {
            "description": "Utilisateur non trouvé"
          },
          "500": {
            "description": "Erreur lors de la mise à jour de l'utilisateur"
          }
        },
        "summary": "Met à jour un utilisateur existant.",
        "tags": ["Users"]
      }
    },
    "/health": {
      "get": {
        "operationId": "get_health",
        "responses": {
          "200": {
            "description": "Statut de santé de l'API",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Endpoint de santé globale de l'API",
        "tags": ["Accueil"]
      }
    },
    "/reservations": {
      "get": {
        "operationId": "list_reservations",
        "parameters": [
          {
            "description": "Numéro de page (commence à 1)",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Taille de page (max 100)",
            "in": "query",
            "name": "page_size",
            "type": "integer"
          },
          {
            "description": "Date de début pour filtrer par date d'arrivée (YYYY-MM-DD)",
            "in": "query",
            "name": "checkin_date_from",
            "type": "string"
          },
          {
            "description": "Date de fin pour filtrer par date d'arrivée (YYYY-MM-DD)",
            "in": "query",
            "name": "checkin_date_to",
            "type": "string"
          },
          {
            "description": "Filtrer par statut de réservation",
            "in": "query",
            "name": "status",
            "type": "string"
          },
          {
            "description": "Filtrer par plateforme OTA",
            "in": "query",
            "name": "ota",
            "type": "string"
          },
          {
            "description": "Recherche textuelle (code confirmation, nom client, nom listing)",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Une liste paginée de réservations",
            "schema": {
              "properties": {
                "reservations": {
                  "items": {
                    "$ref": "#/definitions/Reservation"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Paramètres de pagination invalides"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Liste les réservations avec filtres et pagination",
        "tags": ["Reservations"]
      }
    },
    "/reservations/overrides/fields": {
      "get": {
        "operationId": "get_allowed_override_fields",
        "responses": {
          "200": {
            "description": "Liste des champs autorisés récupérée avec succès",
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "displayName": {
                        "type": "string"
                      },
                      "fieldName": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "error": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Erreur interne du serveur"
          }
        },
        "summary": "Récupère la liste des champs autorisés pour les surcharges.",
        "tags": ["Overrides"]
      }
    },
    "/reservations/queue/status": {
      "get": {
        "operationId": "get_queue_status",
        "parameters": [
          {
            "description": "ID de la file d'attente à récupérer.",
            "in": "query",
            "name": "queue_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Statut de la file récupéré avec succès",
            "schema": {
              "properties": {
                "data": {
                  "properties": {
                    "COMPLETED": {
                      "type": "integer"
                    },
                    "ERROR": {
                      "type": "integer"
                    },
                    "PENDING": {
                      "type": "integer"
                    },
                    "SKIPPED": {
                      "type": "integer"
                    },
                    "last_updated": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "error": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Erreur interne du serveur"
          }
        },
        "summary": "Récupère le statut de la file d'attente de traitement.",
        "tags": ["Queue"]
      }
    },
    "/reservations/{confirmation_code}": {
      "get": {
        "description": "Retourne les détails de la réservation correspondant au code fourni. Retourne une erreur si la réservation n'existe pas.",
        "operationId": "get_reservation_by_code",
        "parameters": [
          {
            "description": "Code de confirmation de la réservation",
            "in": "path",
            "name": "confirmation_code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Réservation trouvée avec succès"
          },
          "404": {
            "description": "Réservation non trouvée"
          },
          "500": {
            "description": "Erreur interne du serveur"
          }
        },
        "summary": "Récupère les détails d'une réservation par son code de confirmation",
        "tags": ["Reservations"]
      }
    },
    "/reservations/{confirmation_code}/history": {
      "get": {
        "operationId": "get_reservation_history",
        "parameters": [
          {
            "description": "Code de confirmation de la réservation",
            "in": "path",
            "name": "confirmation_code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Historique récupéré avec succès",
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "TOTAL_TTC_trace": {
                        "type": "string"
                      },
                      "TOTAL_TTC_value": {
                        "type": "string"
                      },
                      "constantsProfileUsed": {
                        "type": "string"
                      },
                      "dataSourceOrigin": {
                        "type": "string"
                      },
                      "generatingUser": {
                        "type": "string"
                      },
                      "reportGenerationTimestamp": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "reportId": {
                        "type": "string"
                      },
                      "statusReport": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "error": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Réservation non trouvée"
          },
          "500": {
            "description": "Erreur interne du serveur"
          }
        },
        "summary": "Récupère l'historique complet des versions de calcul pour une réservation.",
        "tags": ["History"]
      }
    },
    "/reservations/{confirmation_code}/overrides": {
      "get": {
        "operationId": "get_overrides_for_reservation",
        "parameters": [
          {
            "description": "Code de confirmation de la réservation",
            "in": "path",
            "name": "confirmation_code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Surcharges récupérées avec succès",
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "confirmationCode": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "string"
                      },
                      "fieldName": {
                        "type": "string"
                      },
                      "overriddenValue": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "error": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Réservation non trouvée"
          },
          "500": {
            "description": "Erreur interne du serveur"
          }
        },
        "summary": "Récupère toutes les surcharges manuelles pour une réservation.",
        "tags": ["Overrides"]
      },
      "post": {
        "operationId": "create_or_update_override",
        "parameters": [
          {
            "description": "Code de confirmation de la réservation",
            "in": "path",
            "name": "confirmation_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "override_data",
            "required": true,
            "schema": {
              "properties": {
                "createdBy": {
                  "description": "Utilisateur effectuant la modification",
                  "type": "string"
                },
                "fieldName": {
                  "description": "Nom du champ à surcharger",
                  "type": "string"
                },
                "overriddenValue": {
                  "description": "Nouvelle valeur pour le champ",
                  "type": "string"
                }
              },
              "required": ["fieldName", "overriddenValue"],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Surcharge créée avec succès"
          },
          "400": {
            "description": "Données invalides"
          },
          "404": {
            "description": "Réservation non trouvée"
          },
          "500": {
            "description": "Erreur interne du serveur"
          }
        },
        "summary": "Crée ou met à jour une surcharge manuelle pour une réservation.",
        "tags": ["Overrides"]
      }
    },
    "/reservations/{confirmation_code}/overrides/{field_name}": {
      "delete": {
        "operationId": "delete_override",
        "parameters": [
          {
            "description": "Code de confirmation de la réservation",
            "in": "path",
            "name": "confirmation_code",
            "required": true,
            "type": "string"
          },
          {
            "description": "Nom du champ à supprimer",
            "in": "path",
            "name": "field_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Surcharge supprimée avec succès"
          },
          "404": {
            "description": "Réservation ou surcharge non trouvée"
          },
          "500": {
            "description": "Erreur interne du serveur"
          }
        },
        "summary": "Supprime une surcharge manuelle pour une réservation.",
        "tags": ["Overrides"]
      }
    },
    "/reservations/{confirmation_code}/recalculate": {
      "post": {
        "operationId": "recalculate_reservation",
        "parameters": [
          {
            "description": "Code de confirmation de la réservation",
            "in": "path",
            "name": "confirmation_code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Recalcul déclenché avec succès",
            "schema": {
              "properties": {
                "data": {
                  "properties": {
                    "added_to_queue_ts": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "confirmation_code": {
                      "type": "string"
                    },
                    "gm_reservation_id": {
                      "type": "string"
                    },
                    "queue_entry_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "error": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Réservation non trouvée"
          },
          "500": {
            "description": "Erreur interne du serveur"
          }
        },
        "summary": "Déclenche manuellement le recalcul d'une réservation.",
        "tags": ["Queue"]
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "description": "Clé API pour l'accès à l'API Gateway",
      "in": "header",
      "name": "x-api-key",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "x-google-backend": {
    "address": "https://apijhmhportail-22997865276.europe-west1.run.app",
    "protocol": "h2"
  }
}
